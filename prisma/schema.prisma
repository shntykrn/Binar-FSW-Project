generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Fuel {
  id           BigInt @id @default(autoincrement())
  type         String @db.VarChar(50)
  price        Float
  octan_rating Int
  cars         cars[]
}

model Manufacture {
  id          BigInt  @id @default(autoincrement())
  manufacture String  @db.VarChar
  address     String? @db.VarChar
  cars        cars[]
}

model Model {
  id   BigInt @id @default(autoincrement())
  type String @db.VarChar
  year Int?
  cars cars[]
}

model Transmission {
  id              BigInt @id @default(autoincrement())
  type            String @db.VarChar(50)
  number_of_gears Int?
  cars            cars[]
}

model Type {
  id          BigInt  @id @default(autoincrement())
  type        String  @db.VarChar
  description String?
  cars        cars[]
}

model cars {
  plate           String        @db.VarChar(20)
  manufacture_id  BigInt?
  model_id        BigInt?
  image           String?
  rentPerDay      Int
  capacity        Int
  description     String?
  availableAt     String
  transmission_id BigInt?
  available       Boolean
  type_id         BigInt?
  year            Int
  options         Json?         @db.Json
  specs           Json?         @db.Json
  fuel_id         BigInt?
  id              Int           @id @default(autoincrement())
  Fuel            Fuel?         @relation(fields: [fuel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Manufacture     Manufacture?  @relation(fields: [manufacture_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Model           Model?        @relation(fields: [model_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Transmission    Transmission? @relation(fields: [transmission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Type            Type?         @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              BigInt  @id(map: "users_pk") @default(autoincrement())
  name            String  @db.VarChar
  email           String  @unique(map: "users_email_idx") @db.VarChar
  password        String  @db.VarChar
  profile_picture String? @db.VarChar
  role_id         Int     @default(2)
}
